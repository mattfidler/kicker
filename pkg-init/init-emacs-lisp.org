#+TITLE: Kicker Lisp 
#+OPTIONS: toc:nil num:nil ^:nil

This is part of the [[file:kicker.org][Emacs Kicker]].

* Kicker Lisp
Support for editing list dialects including [[* Emacs Lisp][Emacs Lisp]],
[[* Common Lisp][Common Lisp]], and [[* Clojure][Clojure]].
** Emacs Lisp
   :PROPERTIES:
   :CUSTOM_ID: emacs-lisp
   :END:
This does the following:
- Turn on el-doc
- Turn on coding hook
- Removes =.elc= files on save.
- Add =C-c v= to be `eval-buffer'
- Adds extra autopair groups.
- Changes adaptive filling for lisp-style comments
#+begin_src emacs-lisp
  (add-hook 'emacs-lisp-mode-hook 'turn-on-eldoc-mode)
  (add-hook 'emacs-lisp-mode-hook 'run-kicker-coding-hook)
  (add-hook 'emacs-lisp-mode-hook 'kicker-remove-elc-on-save)
  ;; (add-hook 'emacs-lisp-mode-hook 'idle-highlight)
  (define-key emacs-lisp-mode-map (kbd "C-c v") 'eval-buffer)
  
  (defun kicker-remove-elc-on-save ()
    "If you're saving an elisp file, likely the .elc is no longer valid."
    (make-local-variable 'after-save-hook)
    (add-hook 'after-save-hook
              (lambda ()
                (if (file-exists-p (concat buffer-file-name "c"))
                    (delete-file (concat buffer-file-name "c"))))))
  
  (defun kicker-add-extra-autopairs ()
    "To add extra autopairs and change autopair behaviour"
    (when (boundp 'autopair-extra-pairs)
      (push '(?` . ?')
            (getf autopair-extra-pairs :comment))
      (push '(?` . ?')
            (getf autopair-extra-pairs :string))
      (set (make-local-variable 'autopair-skip-whitespace) 'chomp)))
  
  (add-hook 'emacs-lisp-mode-hook 'kicker-add-extra-autopairs)
  
  (defun kicker-change-adaptive-filling-el ()
    "Changes Emacs Lisp adaptive filling comments"
    (interactive)
    (set (make-local-variable 'adaptive-fill-regexp)
         "[ \t]*\\([-–!|#%;>*·•‣⁃◦;]+[ \t]*\\)*")
    (set (make-local-variable 'adaptive-fill-first-line-regexp)
         "\\`[ \t]*[;]*[ \t]*\\'"))
  (add-hook 'emacs-lisp-mode-hook 'kicker-change-adaptive-filling-el)
  
  
  
#+end_src

** Scheme
   :PROPERTIES:
   :CUSTOM_ID: scheme
   :END:

#+begin_src emacs-lisp
(add-hook 'scheme-mode-hook 'run-kicker-coding-hook)
;; (add-hook 'scheme-mode-hook 'idle-highlight)
(font-lock-add-keywords 'scheme-mode
			'(("(\\|)" . 'kicker-paren-face)))
#+end_src

